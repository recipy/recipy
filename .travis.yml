language: python

matrix:
  include:
    - python: 2.7
    - python: 3.4
    - python: 3.5
    - python: 3.6

before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --prepend channels conda-forge
  - conda update -q conda
  - conda info -a

install:
  # Issues have been encountered with installing numpy and scipy on
  # Travis CI e.g. https://gist.github.com/dan-blanchard/7045057.
  # Miniconda is recommended as the way to install these. See also:
  # http://conda.pydata.org/docs/travis.html
  # The following adopts approaches suggested in the above links.
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
    pytest
    python-dateutil pyyaml numpy git
    matplotlib
    pandas pytables xlrd xlwt
    lxml
    beautifulsoup4
    pillow
    scikit-learn
    scikit-image
    nibabel
    gdal imageio tifffile xarray rasterio netCDF4
    iris
    joblib
  - source activate test-environment
  # Install packages conditionally depending on python version
  - if [[ ("$TRAVIS_PYTHON_VERSION" == "2.7" ) || ( "$TRAVIS_PYTHON_VERSION" == "3.5" ) || ( "$TRAVIS_PYTHON_VERSION" == "3.6" ) ]];
    then
      conda install tensorflow keras>=2.2.4;
    fi
  # Copy matplotlib configuration so it does not try and plot to
  # screen, which can cause matplotlib tests to fail.
  - cp integration_test/packages/matplotlibrc .
    # Install recipy.
  - pip install .
  # Print the environment.
  - which python
  - which pip
  - which py.test
  - py.test --version
  - pip freeze
  - conda config --show
  - python --version
  - python -c "import sys, pprint; pprint.pprint(sys.path)"
  - python -c "import tinydb"

script:
  # Run py.test with 'v' (verbose) to show test function names and
  # 'rs' to show reasons for skipped tests
  - py.test -v -rs integration_test
